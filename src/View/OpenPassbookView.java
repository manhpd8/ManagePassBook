/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.PassbookController;
import DAO.ClientDAO;
import DAO.PassbookTypeDAO;
import DAO.RateDAO;
import Model.Client;
import Model.Passbook;
import Model.PassbookType;
import Model.Period;
import Model.Rate;
import Utility.StringUtility;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author minht
 */
public class OpenPassbookView extends javax.swing.JFrame {

    /**
     * Creates new form OpenPassbookView
     */
    ClientDAO clientDAO;
    RateDAO rateDAO;
    PassbookTypeDAO passbookTypeDAO;
    PassbookController passbookController;
    public OpenPassbookView() {
        initComponents();
        clientDAO = new ClientDAO();
        rateDAO = new RateDAO();
        passbookTypeDAO = new PassbookTypeDAO();
        passbookController = new PassbookController();
        loadDefaultValues();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jTextCreatedDate = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jTextMaKH = new javax.swing.JTextField();
        jBtnTimKH = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabelCustomerName = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jTextMoney = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        jCBPassbookType = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jCBPeriod = new javax.swing.JComboBox<>();
        jLabel11 = new javax.swing.JLabel();
        jTextRate = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jDateOpen = new com.toedter.calendar.JDateChooser();
        jLabel7 = new javax.swing.JLabel();
        jTextPeriodDate = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jTextOpenStatus = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jTextNameStaff = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jTextDateInput = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabelError = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel2.setText("Ngày giao dịch: ");

        jTextCreatedDate.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextCreatedDate.setText("../../....");
        jTextCreatedDate.setEnabled(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin khách hàng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N
        jPanel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Mã khách hàng:");

        jTextMaKH.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        jBtnTimKH.setText("Tìm");
        jBtnTimKH.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnTimKHActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("Tên khách hàng:");

        jLabelCustomerName.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addGap(13, 13, 13)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelCustomerName, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jTextMaKH, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(41, 41, 41)
                        .addComponent(jBtnTimKH)))
                .addContainerGap(562, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(4, 4, 4)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextMaKH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jBtnTimKH))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelCustomerName, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jLabelCustomerName.getAccessibleContext().setAccessibleDescription("Name");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin tài khoản tiền gửi", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel9.setText("Số tiền gửi(VNĐ):");

        jTextMoney.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextMoney.setText("0");
        jTextMoney.setToolTipText("");
        jTextMoney.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextMoneyActionPerformed(evt);
            }
        });

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel10.setText("Loại sổ tiết kiệm:");

        jCBPassbookType.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jCBPassbookType.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jCBPassbookType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBPassbookTypeActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Kỳ hạn:");

        jCBPeriod.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBPeriodActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel11.setText("Lãi xuất / năm:");

        jTextRate.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextRate.setText("0");
        jTextRate.setToolTipText("");

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel12.setText("Ngày gửi:");

        jDateOpen.setDateFormatString("dd/mm/yyyy");
        jDateOpen.setEnabled(false);

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setText("Ngày đến hạn:");

        jTextPeriodDate.setText("../../....");
        jTextPeriodDate.setEnabled(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(jLabel9)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jDateOpen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCBPassbookType, 0, 200, Short.MAX_VALUE)
                    .addComponent(jTextRate)
                    .addComponent(jTextMoney)
                    .addComponent(jCBPeriod, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(172, 172, 172)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jTextPeriodDate, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTextPeriodDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(jTextMoney, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(jCBPassbookType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jCBPeriod, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextRate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jDateOpen, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Thông tin kiểm soát", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 12))); // NOI18N
        jPanel3.setEnabled(false);

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel15.setText("Trạng thái giao dịch:");
        jLabel15.setEnabled(false);

        jTextOpenStatus.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextOpenStatus.setText("Chưa duyệt");
        jTextOpenStatus.setToolTipText("");
        jTextOpenStatus.setEnabled(false);

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel16.setText("Người nhập:");
        jLabel16.setEnabled(false);

        jTextNameStaff.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextNameStaff.setEnabled(false);

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel17.setText("Ngày nhập:");
        jLabel17.setEnabled(false);

        jTextDateInput.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextDateInput.setEnabled(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15)
                    .addComponent(jLabel16)
                    .addComponent(jLabel17))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextNameStaff)
                    .addComponent(jTextOpenStatus, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE)
                    .addComponent(jTextDateInput))
                .addGap(670, 670, 670))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(jTextOpenStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel16)
                    .addComponent(jTextNameStaff, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(jTextDateInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jLabelError.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabelError.setForeground(new java.awt.Color(255, 0, 0));

        btnSave.setText("Lưu");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnBack.setText("Trở lại");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabelError, javax.swing.GroupLayout.PREFERRED_SIZE, 613, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(72, 72, 72)
                        .addComponent(btnBack)
                        .addGap(94, 94, 94))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(jLabel2)
                                .addGap(18, 18, 18)
                                .addComponent(jTextCreatedDate, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextCreatedDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabelError, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        try {
            btnSave.setEnabled(false);
            int maKH = validateMaKH();
            int soTien = validateSoTienGui();
            validateCombobox();
            PassbookType passbookType = (PassbookType) jCBPassbookType.getSelectedItem();
            Period period = (Period) jCBPeriod.getSelectedItem();
            Rate rate = rateDAO.getRateByPeriod(period.getPeriod());
            Passbook passbook = new Passbook();
            passbook.setId_staff(1);
            passbook.setStart_date(jDateOpen.getDate());
            passbook.setId_passbook_type(passbookType.getId());
            passbook.setId_interest_rate(rate.getId());
            passbook.setMoney_value(soTien);
            passbook.setStatus("OPEN");
            passbook.setId_client(maKH);
            if(passbookController.insertPassbook(passbook) ) {
                JOptionPane.showMessageDialog(this, "Mở sổ thành công");
            }
            else {
                JOptionPane.showMessageDialog(this, "Mở sổ không thành công");
            }
        } catch (Exception ex) {
            Logger.getLogger(OpenPassbookView.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Lỗi!", JOptionPane.ERROR_MESSAGE);
        }
        btnSave.setEnabled(true);
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:

    }//GEN-LAST:event_btnBackActionPerformed

    private void jTextMoneyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextMoneyActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextMoneyActionPerformed

    private void jBtnTimKHActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnTimKHActionPerformed
        // TODO add your handling code here:
        jLabelCustomerName.setText("");

        try {
            // kiểm tra trường mã khách hàng khi nhập
            int maKH = validateMaKH();
            // tìm kiếm khách hàng trong db
            if (clientDAO.isClientExistedId(maKH)) {
                Client client = clientDAO.getClientById(maKH);
                String tenKH = client.getFirstname().concat(" ").concat(client.getLastName()).trim();
                // cập nhập thông tin
                jLabelCustomerName.setText(tenKH);
            } else {
                JOptionPane.showMessageDialog(this, "Mã khách hàng không tồn tại", "Lỗi!", JOptionPane.ERROR_MESSAGE);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "Lỗi!", JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_jBtnTimKHActionPerformed

    private void jCBPassbookTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBPassbookTypeActionPerformed
        // TODO add your handling code here:
//        PassbookType passbookType = (PassbookType)jCBPassbookType.getSelectedItem();
//        if(passbookType.getCode().equals("KKH")) {
//            jCBPeriod.setEnabled(false);
//        }
//        else {
//            jCBPeriod.setEnabled(true);
//        }
        
    }//GEN-LAST:event_jCBPassbookTypeActionPerformed

    private void jCBPeriodActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBPeriodActionPerformed
        // TODO add your handling code here:
        updateRate();
        updatePeriodDate();
    }//GEN-LAST:event_jCBPeriodActionPerformed

    private boolean isNullOrEmpty(String text) {
        return text == null || text.isEmpty();
    }

    private boolean isOnlyNumber(String text) {
        return text.matches("[0-9]+");
    }

    private int validateMaKH() throws Exception {
        String text = jTextMaKH.getText().trim();
        if (isNullOrEmpty(text)) {
            throw new Exception("Mã khách hàng không được để trống");
        } //        else if(text.length() > 8) {
        //            return "Mã khách hàng nhỏ hơn 8 ký tự";
        //        }
        else if (!isOnlyNumber(text)) {
            throw new Exception("Mã khách hàng không phải là số");
        }
        try {
            int maKH = Integer.parseInt(text);
            return maKH;
        }
        catch(NumberFormatException ex) {
            throw new Exception("Định dạng số không hợp lệ");
        }
    }

    private int validateSoTienGui() throws Exception {
        String text = jTextMoney.getText().trim();
        if (isNullOrEmpty(text)) {
            throw new Exception("Số tiền không được để trống");
        } else if (!isOnlyNumber(text)) {
            throw new Exception("Số tiền nhập vào không phải là số");
        } else {
            try {
                int money = Integer.parseInt(text);
                if(money % 100 != 0) {
                    throw new Exception("Số tiền phải là bội của 100");
                }
                return money;
            } catch(NumberFormatException ex) {
                throw new Exception("Định dạng số tiền không hợp lệ");
            }
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OpenPassbookView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OpenPassbookView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OpenPassbookView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OpenPassbookView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OpenPassbookView().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton jBtnTimKH;
    private javax.swing.JComboBox<Object> jCBPassbookType;
    private javax.swing.JComboBox<Object> jCBPeriod;
    private com.toedter.calendar.JDateChooser jDateOpen;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabelCustomerName;
    private javax.swing.JLabel jLabelError;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTextField jTextCreatedDate;
    private javax.swing.JTextField jTextDateInput;
    private javax.swing.JTextField jTextMaKH;
    private javax.swing.JTextField jTextMoney;
    private javax.swing.JTextField jTextNameStaff;
    private javax.swing.JTextField jTextOpenStatus;
    private javax.swing.JTextField jTextPeriodDate;
    private javax.swing.JTextField jTextRate;
    // End of variables declaration//GEN-END:variables

    private void loadDefaultValues() {
        Calendar calendar = Calendar.getInstance();
        SimpleDateFormat sdf = new SimpleDateFormat(StringUtility.DATE_FORMAT);
        String currentDate = sdf.format(calendar.getTime());
        jTextCreatedDate.setText(currentDate);
        jTextDateInput.setText(currentDate);
        jTextRate.setEditable(false);
        jDateOpen.setDate(calendar.getTime());
        loadPassbookType();
        loadPeriod();
        updateRate();
        updatePeriodDate();
    }

    private void loadPassbookType() {
        List<PassbookType> passbook_types = passbookTypeDAO.getAllPassbookType();
        for(PassbookType type : passbook_types) {
             jCBPassbookType.addItem(type);
        }  
    }

    private void loadPeriod() {
        List<Rate> list_rate = rateDAO.getAllRate();
        for(Rate rate : list_rate) {
            jCBPeriod.addItem(new Period(rate.getPeriod()));
        }
    }

    private void updateRate() {
        Period period = (Period) jCBPeriod.getSelectedItem();
        Rate rate = rateDAO.getRateByPeriod(period.getPeriod());
        jTextRate.setText(String.valueOf(rate.getRate()).trim());        
    }

    private void updatePeriodDate() {
        Period period = (Period) jCBPeriod.getSelectedItem();
        if(period.getPeriod() <= 0) {
            jTextPeriodDate.setText("../../....");
        }
        else {
            Calendar calendar = Calendar.getInstance();
            calendar.setTime(jDateOpen.getDate());
            calendar.add(Calendar.MONTH, period.getPeriod());
            SimpleDateFormat sdf = new SimpleDateFormat(StringUtility.DATE_FORMAT);
            String periodDate = sdf.format(calendar.getTime());
            jTextPeriodDate.setText(periodDate);
        }
    }

    private void validateCombobox() throws Exception {
        //throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
        PassbookType type = (PassbookType)jCBPassbookType.getSelectedItem();
        if(type.getCode().equals("CKH")) {
            Period period = (Period) jCBPeriod.getSelectedItem();
            if(period.getPeriod() == Period.KKH) {
                jCBPeriod.requestFocus();
                throw new Exception("Chọn kỳ hạn hợp lệ");
            }
        }
    }
}
